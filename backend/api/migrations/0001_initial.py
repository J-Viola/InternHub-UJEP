# Generated by Django 5.2.2 on 2025-06-06 14:36

import api.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "last_login",
                    models.DateTimeField(blank=True, null=True, verbose_name="last login"),
                ),
                ("user_id", models.AutoField(primary_key=True, serialize=False)),
                ("password", models.CharField(blank=True, max_length=128, null=True)),
                (
                    "username",
                    models.CharField(blank=True, max_length=150, null=True, unique=True),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                (
                    "title_before",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("first_name", models.CharField(blank=True, max_length=50, null=True)),
                ("last_name", models.CharField(blank=True, max_length=50, null=True)),
                ("title_after", models.CharField(blank=True, max_length=50, null=True)),
                ("phone", models.CharField(blank=True, max_length=15, null=True)),
                ("is_active", models.BooleanField(default=False)),
                ("is_superuser", models.BooleanField(default=False)),
                ("is_staff", models.BooleanField(default=False)),
                ("activated_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "polymorphic_ctype",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="polymorphic_%(app_label)s.%(class)s_set+",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "db_table": "user",
                "swappable": "AUTH_USER_MODEL",
                "managed": False,
            },
            managers=[
                ("objects", api.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Department",
            fields=[
                ("department_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "department_name",
                    models.CharField(blank=True, max_length=100, null=True, unique=True),
                ),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "department",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OrganizationRole",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("role", models.CharField(unique=True)),
                (
                    "role_name",
                    models.CharField(blank=True, max_length=50, null=True, unique=True),
                ),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "organizationrole",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PracticeType",
            fields=[
                (
                    "practice_type_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                (
                    "name",
                    models.CharField(blank=True, max_length=100, null=True, unique=True),
                ),
                ("coefficient", models.FloatField(blank=True, null=True)),
            ],
            options={
                "db_table": "practicetype",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Role",
            fields=[
                ("role_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "role_name",
                    models.CharField(blank=True, max_length=50, null=True, unique=True),
                ),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "role",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="StagRole",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("role", models.CharField(unique=True)),
                (
                    "role_name",
                    models.CharField(blank=True, max_length=50, null=True, unique=True),
                ),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "stagrole",
                #"managed": False,
            },
        ),
        migrations.CreateModel(
            name="Status",
            fields=[
                ("status_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "status_code",
                    models.CharField(blank=True, max_length=50, null=True, unique=True),
                ),
                (
                    "status_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "status_category",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "status",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OrganizationUser",
            fields=[
                (
                    "user_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "organizationuser",
                "managed": False,
            },
            bases=("api.user",),
            managers=[
                ("objects", api.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="StagUser",
            fields=[
                (
                    "user_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("profile_picture", models.TextField(blank=True, null=True)),
                (
                    "field_of_study",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("year_of_study", models.IntegerField(blank=True, null=True)),
                (
                    "stag_f_number",
                    models.IntegerField(blank=True, null=True, unique=True),
                ),
                ("resume", models.TextField(blank=True, null=True)),
                ("additional_info", models.TextField(blank=True, null=True)),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                (
                    "place_of_birth",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("street", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "street_number",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("zip_code", models.CharField(blank=True, max_length=10, null=True)),
                ("city", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "specialization",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "stag_role",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="api.stagrole",
                    ),
                ),
            ],
            options={
                "db_table": "staguser",
                #"managed": False,
            },
            bases=("api.user",),
            managers=[
                ("objects", api.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="ActionLog",
            fields=[
                ("action_id", models.AutoField(primary_key=True, serialize=False)),
                ("action_type", models.CharField(blank=True, max_length=50, null=True)),
                ("object_type", models.CharField(blank=True, max_length=50, null=True)),
                ("object_id", models.IntegerField(blank=True, null=True)),
                ("action_description", models.TextField(blank=True, null=True)),
                ("action_date", models.DateTimeField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "actionlog",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EmployerProfile",
            fields=[
                ("employer_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "company_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "ico",
                    models.CharField(blank=True, max_length=15, null=True, unique=True),
                ),
                (
                    "dic",
                    models.CharField(blank=True, max_length=15, null=True, unique=True),
                ),
                ("address", models.TextField(blank=True, null=True)),
                ("company_profile", models.TextField(blank=True, null=True)),
                (
                    "approval_status",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="api.status",
                    ),
                ),
            ],
            options={
                "db_table": "employerprofile",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Subject",
            fields=[
                ("subject_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "subject_code",
                    models.CharField(blank=True, max_length=50, null=True, unique=True),
                ),
                (
                    "subject_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("hours_required", models.IntegerField(blank=True, null=True)),
                (
                    "department",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="api.department",
                    ),
                ),
            ],
            options={
                "db_table": "subject",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Practice",
            fields=[
                ("practice_id", models.AutoField(primary_key=True, serialize=False)),
                ("title", models.CharField(blank=True, max_length=100, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("responsibilities", models.TextField(blank=True, null=True)),
                ("available_positions", models.IntegerField(blank=True, null=True)),
                ("start_date", models.DateField(blank=True, null=True)),
                ("end_date", models.DateField(blank=True, null=True)),
                ("is_active", models.BooleanField(blank=True, null=True)),
                ("image_base64", models.TextField(blank=True, null=True)),
                (
                    "employer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="api.employerprofile",
                    ),
                ),
                (
                    "practice_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="api.practicetype",
                    ),
                ),
                (
                    "approval_status",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="practice_approval_status_set",
                        to="api.status",
                    ),
                ),
                (
                    "status",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="api.status",
                    ),
                ),
                (
                    "subject",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="api.subject",
                    ),
                ),
                (
                    "contact_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="api.organizationuser",
                    ),
                ),
            ],
            options={
                "db_table": "practice",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UploadedDocument",
            fields=[
                ("document_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "document_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("file_path", models.CharField(blank=True, max_length=255, null=True)),
                ("uploaded_at", models.DateTimeField(blank=True, null=True)),
                (
                    "document_type",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "practice",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="api.practice",
                    ),
                ),
            ],
            options={
                "db_table": "uploadeddocument",
                "managed": False,
            },
        ),
        migrations.AddField(
            model_name="organizationuser",
            name="employer_profile",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="api.employerprofile",
            ),
        ),
        migrations.AddField(
            model_name="organizationuser",
            name="organization_role",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="api.organizationrole",
            ),
        ),
        migrations.CreateModel(
            name="EmployerInvitation",
            fields=[
                ("invitation_id", models.AutoField(primary_key=True, serialize=False)),
                ("submission_date", models.DateField(blank=True, null=True)),
                ("expiration_date", models.DateField(blank=True, null=True)),
                ("message", models.TextField(blank=True, null=True)),
                (
                    "employer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="api.employerprofile",
                    ),
                ),
                (
                    "practice",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="api.practice",
                    ),
                ),
                (
                    "status",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="api.status",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="api.organizationuser",
                    ),
                ),
            ],
            options={
                "db_table": "employerinvitation",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserSubject",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("role", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "subject",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="api.subject",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="api.staguser",
                    ),
                ),
            ],
            options={
                "db_table": "usersubject",
                "unique_together": {("user", "subject")},
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="StudentPractice",
            fields=[
                (
                    "student_practice_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("application_date", models.DateField(blank=True, null=True)),
                ("hours_completed", models.IntegerField(blank=True, null=True)),
                ("cancellation_reason", models.TextField(blank=True, null=True)),
                (
                    "approval_status",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="api.status",
                    ),
                ),
                (
                    "cancelled_by_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="studentpractice_cancelled_by_user_set",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "practice",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="api.practice",
                    ),
                ),
                (
                    "progress_status",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="studentpractice_progress_status_set",
                        to="api.status",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="api.staguser",
                    ),
                ),
            ],
            options={
                "db_table": "studentpractice",
                "unique_together": {("user", "practice")},
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PracticeUser",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "practice",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="api.practice",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="api.staguser",
                    ),
                ),
            ],
            options={
                "db_table": "practiceuser",
                "unique_together": {("practice", "user")},
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DepartmentUserRole",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "department",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="api.department",
                    ),
                ),
                (
                    "role",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="api.role",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="api.staguser",
                    ),
                ),
            ],
            options={
                "db_table": "departmentuserrole",
                "unique_together": {("department", "user", "role")},
                "managed": False,
            },
        ),
    ]
