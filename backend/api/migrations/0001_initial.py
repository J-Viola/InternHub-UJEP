# Generated by Django 5.2.1 on 2025-05-18 11:48

import api.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "user_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                (
                    "username",
                    models.CharField(
                        blank=True, max_length=50, null=True, unique=True
                    ),
                ),
                (
                    "password",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "email",
                    models.CharField(
                        blank=True, max_length=255, null=True, unique=True
                    ),
                ),
                (
                    "title_before",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "first_name",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "last_name",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "title_after",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "phone",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                ("date_joined", models.DateTimeField(blank=True, null=True)),
                ("is_active", models.BooleanField(blank=True, null=True)),
                ("profile_picture", models.TextField(blank=True, null=True)),
                (
                    "field_of_study",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("year_of_study", models.IntegerField(blank=True, null=True)),
                (
                    "stag_f_number",
                    models.IntegerField(blank=True, null=True, unique=True),
                ),
                ("resume", models.TextField(blank=True, null=True)),
                ("additional_info", models.TextField(blank=True, null=True)),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                (
                    "place_of_birth",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "street",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "street_number",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                (
                    "zip_code",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                (
                    "city",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "specialization",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("is_superuser", models.BooleanField(default=False)),
                ("is_staff", models.BooleanField(default=False)),
            ],
            options={
                "db_table": "user",
                "managed": False,
            },
            managers=[
                ("objects", api.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="ActionLog",
            fields=[
                (
                    "action_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                (
                    "action_type",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "object_type",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("object_id", models.IntegerField(blank=True, null=True)),
                (
                    "action_description",
                    models.TextField(blank=True, null=True),
                ),
                ("action_date", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "actionlog",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Department",
            fields=[
                (
                    "department_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                (
                    "department_name",
                    models.CharField(
                        blank=True, max_length=100, null=True, unique=True
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "department",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DepartmentUserRole",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "departmentuserrole",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EmployerInvitation",
            fields=[
                (
                    "invitation_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("submission_date", models.DateField(blank=True, null=True)),
                ("expiration_date", models.DateField(blank=True, null=True)),
                ("message", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "employerinvitation",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EmployerProfile",
            fields=[
                (
                    "employer_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                (
                    "company_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "ico",
                    models.CharField(
                        blank=True, max_length=15, null=True, unique=True
                    ),
                ),
                (
                    "dic",
                    models.CharField(
                        blank=True, max_length=15, null=True, unique=True
                    ),
                ),
                ("address", models.TextField(blank=True, null=True)),
                ("company_profile", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "employerprofile",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EmployerUserRole",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "employeruserrole",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Practice",
            fields=[
                (
                    "practice_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                (
                    "title",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("description", models.TextField(blank=True, null=True)),
                ("responsibilities", models.TextField(blank=True, null=True)),
                (
                    "available_positions",
                    models.IntegerField(blank=True, null=True),
                ),
                ("start_date", models.DateField(blank=True, null=True)),
                ("end_date", models.DateField(blank=True, null=True)),
                ("is_active", models.BooleanField(blank=True, null=True)),
                ("image_base64", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "practice",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PracticeType",
            fields=[
                (
                    "practice_type_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, max_length=100, null=True, unique=True
                    ),
                ),
                ("coefficient", models.FloatField(blank=True, null=True)),
            ],
            options={
                "db_table": "practicetype",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PracticeUser",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "practiceuser",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Role",
            fields=[
                (
                    "role_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                (
                    "role_name",
                    models.CharField(
                        blank=True, max_length=50, null=True, unique=True
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "role",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Status",
            fields=[
                (
                    "status_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                (
                    "status_code",
                    models.CharField(
                        blank=True, max_length=50, null=True, unique=True
                    ),
                ),
                (
                    "status_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "status_category",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "status",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="StudentPractice",
            fields=[
                (
                    "student_practice_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("application_date", models.DateField(blank=True, null=True)),
                (
                    "hours_completed",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "cancellation_reason",
                    models.TextField(blank=True, null=True),
                ),
            ],
            options={
                "db_table": "studentpractice",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Subject",
            fields=[
                (
                    "subject_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                (
                    "subject_code",
                    models.CharField(
                        blank=True, max_length=50, null=True, unique=True
                    ),
                ),
                (
                    "subject_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("hours_required", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "subject",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UploadedDocument",
            fields=[
                (
                    "document_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                (
                    "document_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "file_path",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("uploaded_at", models.DateTimeField(blank=True, null=True)),
                (
                    "document_type",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
            ],
            options={
                "db_table": "uploadeddocument",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserSubject",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "role",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
            ],
            options={
                "db_table": "usersubject",
                "managed": False,
            },
        ),
    ]
